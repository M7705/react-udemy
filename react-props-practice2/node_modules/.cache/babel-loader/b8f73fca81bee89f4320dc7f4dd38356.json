{"ast":null,"code":"import _slicedToArray from \"/Users/eschoi/dev/react-udemy/react-props-practice2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/eschoi/dev/react-udemy/react-props-practice2/src/components/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      yourInput = _useState2[0],\n      setYourInput = _useState2[1];\n\n  function handleChange(event) {\n    setYourInput(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    onChange: props.pGetInputData,\n    type: \"text\",\n    value: yourInput\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Input, \"CdDDdGGzoIO+WWARmPjg+wzhbps=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","Input","props","yourInput","setYourInput","handleChange","event","target","value","pGetInputData"],"sources":["/Users/eschoi/dev/react-udemy/react-props-practice2/src/components/Input.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Input(props) {\n    const [yourInput, setYourInput] = useState(\"\");\n\n    function handleChange(event) {\n        setYourInput(event.target.value);\n    }\n\n    return (\n        <input onChange={props.pGetInputData} type = \"text\" value = {yourInput}></input>\n    )\n}\n\nexport default Input;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EAAA;;EAClB,gBAAkCF,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOG,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IACzBF,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACH;;EAED,oBACI;IAAO,QAAQ,EAAEN,KAAK,CAACO,aAAvB;IAAsC,IAAI,EAAG,MAA7C;IAAoD,KAAK,EAAIN;EAA7D;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH;;GAVQF,K;;KAAAA,K;AAYT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}