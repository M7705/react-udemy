{"ast":null,"code":"\"use strict\";\n\nimport _toConsumableArray from \"/Users/eschoi/dev/react-udemy/es6-spread-operator-practice/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/eschoi/dev/react-udemy/es6-spread-operator-practice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/eschoi/dev/react-udemy/es6-spread-operator-practice/src/components/App.jsx\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  var _this2 = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      addedItem = _useState2[0],\n      setAddedItem = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listArray = _useState4[0],\n      setListArray = _useState4[1]; // const [toDoList, setToDoList] = useState(<li>A Item</li>);\n\n\n  function inputChanged(event) {\n    setAddedItem(event.target.value);\n  }\n\n  function submitItem() {\n    var _this = this;\n\n    console.log(\"addedItem:\" + addedItem);\n    setListArray(function (prevArray) {\n      return [].concat(_toConsumableArray(prevArray), [addedItem]);\n    });\n    var toDoList = listArray.map(function (item) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 40\n        }\n      }, \" \", item, \" \");\n    });\n  } // console.log(\"insidelistArray:\"+listArray)\n  // let newToDoList = \"\";\n  // newToDoList = listArray.map(item => <li> {item} </li>)\n  // // listArray.forEach(item => newToDoList += <li>{item}</li>)\n  // // // console.log(newToDoList)\n  // // console.log(listArray.forEach(item => (\"<li>\" + item + \"</li>\")))\n  // // setToDoList(newToDoList);\n  // console.log(\"newToDoList:\"+newToDoList);\n  // setToDoList(newToDoList);\n  // console.log(\"toDoList:\"+toDoList);\n  // }\n  // let newToDoList = \"\";\n  // newToDoList = listArray.map(item => <li> {item} </li>)\n  // setToDoList(newToDoList)\n  // console.log(\"OutsidelistArray:\"+listArray);\n  // console.log(\"OutsidelistArray:\"+toDoList);\n  // 1. 왜 li를 문자열로 인식하는가??\n  // 2. item은 왜 변수로 인식하지 못하는가 ??\n  // 3. newToDoList는 업데이트가 왜 한발 늦는가???\n  // 4. 리액트는 array를 바로 text로 반환하는가???\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"To-Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: inputChanged,\n    type: \"text\",\n    value: addedItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, listArray.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 34\n      }\n    }, \" \", item, \" \");\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, toDoList)));\n} //CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n\n\nexport default App;","map":{"version":3,"names":["React","useState","App","addedItem","setAddedItem","listArray","setListArray","inputChanged","event","target","value","submitItem","console","log","prevArray","toDoList","map","item"],"sources":["/Users/eschoi/dev/react-udemy/es6-spread-operator-practice/src/components/App.jsx"],"sourcesContent":["\"use strict\";\n\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [addedItem, setAddedItem] = useState(\"\");\n  const [listArray, setListArray] = useState([]);\n  // const [toDoList, setToDoList] = useState(<li>A Item</li>);\n\n  function inputChanged(event) {\n    setAddedItem(event.target.value)\n  }\n\n  function submitItem() {\n    console.log(\"addedItem:\"+addedItem);\n    setListArray(prevArray => [...prevArray, addedItem]);\n  let toDoList = listArray.map(item => <li> {item} </li>)\n  }\n    // console.log(\"insidelistArray:\"+listArray)\n    // let newToDoList = \"\";\n    // newToDoList = listArray.map(item => <li> {item} </li>)\n    // // listArray.forEach(item => newToDoList += <li>{item}</li>)\n    // // // console.log(newToDoList)\n    // // console.log(listArray.forEach(item => (\"<li>\" + item + \"</li>\")))\n    // // setToDoList(newToDoList);\n    // console.log(\"newToDoList:\"+newToDoList);\n    // setToDoList(newToDoList);\n    // console.log(\"toDoList:\"+toDoList);\n    // }\n\n    // let newToDoList = \"\";\n    // newToDoList = listArray.map(item => <li> {item} </li>)\n    // setToDoList(newToDoList)\n\n    // console.log(\"OutsidelistArray:\"+listArray);\n    // console.log(\"OutsidelistArray:\"+toDoList);\n\n// 1. 왜 li를 문자열로 인식하는가??\n// 2. item은 왜 변수로 인식하지 못하는가 ??\n// 3. newToDoList는 업데이트가 왜 한발 늦는가???\n// 4. 리액트는 array를 바로 text로 반환하는가???\n\n    \n\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={inputChanged} type=\"text\" value = {addedItem}/>\n        <button onClick={submitItem} >\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {listArray.map(item => <li> {item} </li>)}\n        </ul>\n        <ul>\n        {toDoList}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n\nexport default App;\n"],"mappings":"AAAA;;;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,gBAAkCD,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOE,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCH,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOI,SAAP;EAAA,IAAkBC,YAAlB,iBAFa,CAGb;;;EAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3BJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACD;;EAED,SAASC,UAAT,GAAsB;IAAA;;IACpBC,OAAO,CAACC,GAAR,CAAY,eAAaV,SAAzB;IACAG,YAAY,CAAC,UAAAQ,SAAS;MAAA,oCAAQA,SAAR,IAAmBX,SAAnB;IAAA,CAAV,CAAZ;IACF,IAAIY,QAAQ,GAAGV,SAAS,CAACW,GAAV,CAAc,UAAAC,IAAI;MAAA,oBAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,QAAMA,IAAN,MAAJ;IAAA,CAAlB,CAAf;EACC,CAbY,CAcX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EAEJ;EACA;EACA;EACA;;;EAKE,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBADF,CADF,eAIE;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,QAAQ,EAAEV,YAAjB;IAA+B,IAAI,EAAC,MAApC;IAA2C,KAAK,EAAIJ,SAApD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAQ,OAAO,EAAEQ,UAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SADF,CAFF,CAJF,eAUE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGN,SAAS,CAACW,GAAV,CAAc,UAAAC,IAAI;IAAA,oBAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,QAAMA,IAAN,MAAJ;EAAA,CAAlB,CADH,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACCF,QADD,CAJF,CAVF,CADF;AAqBD,C,CAED;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,GAAf"},"metadata":{},"sourceType":"module"}