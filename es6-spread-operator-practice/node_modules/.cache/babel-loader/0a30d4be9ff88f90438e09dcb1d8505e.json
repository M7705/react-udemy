{"ast":null,"code":"import _slicedToArray from \"/Users/eschoi/dev/react-udemy/es6-spread-operator-practice/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/eschoi/dev/react-udemy/es6-spread-operator-practice/src/components/App.jsx\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      addedItem = _useState2[0],\n      setAddedItem = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listArray = _useState4[0],\n      setListArray = _useState4[1];\n\n  function inputChanged(event) {\n    setAddedItem(event.target.value);\n  }\n\n  function submitItem(event) {\n    console.log(event.target.value); // setListArray(prevArray => [...prevArray, newItem])\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"To-Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: inputChanged,\n    type: \"text\",\n    value: addedItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitItem,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"A Item\"))));\n} //CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n\n\nexport default App;","map":{"version":3,"names":["React","useState","App","addedItem","setAddedItem","listArray","setListArray","inputChanged","event","target","value","submitItem","console","log"],"sources":["/Users/eschoi/dev/react-udemy/es6-spread-operator-practice/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [addedItem, setAddedItem] = useState(\"\");\n  const [listArray, setListArray] = useState([]);\n\n  function inputChanged(event) {\n    setAddedItem(event.target.value)\n  }\n\n  function submitItem(event) {\n    console.log(event.target.value)\n    // setListArray(prevArray => [...prevArray, newItem])\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={inputChanged} type=\"text\" value = {addedItem}/>\n        <button onClick={submitItem} type=\"button\" >\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          <li>A Item</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,GAAT,GAAe;EACb,gBAAkCD,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOE,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAkCH,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOI,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3BJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACD;;EAED,SAASC,UAAT,CAAoBH,KAApB,EAA2B;IACzBI,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,MAAN,CAAaC,KAAzB,EADyB,CAEzB;EACD;;EAGD,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBADF,CADF,eAIE;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,QAAQ,EAAEH,YAAjB;IAA+B,IAAI,EAAC,MAApC;IAA2C,KAAK,EAAIJ,SAApD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAQ,OAAO,EAAEQ,UAAjB;IAA6B,IAAI,EAAC,QAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SADF,CAFF,CAJF,eAUE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADF,CADF,CAVF,CADF;AAkBD,C,CAED;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,GAAf"},"metadata":{},"sourceType":"module"}